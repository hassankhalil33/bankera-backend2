// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum User_Type {
  FREE
  PREMIUM
  ADMIN
}

model User {
  id           String    @id @unique @default(uuid())
  username     String    @unique
  password     String
  email        String    @unique
  accounts     Account[]
  accountCount Int       @default(1)
  acccountType User_Type @default(FREE)
  refreshToken String?
  dateCreated  DateTime  @default(now())
  dateUpdated  DateTime  @updatedAt()
}

model Account {
  id                   String        @id @unique @default(uuid())
  User                 User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId               String        @unique
  money                Float         @default(0)
  is_banned            Boolean       @default(false)
  sentTransactions     Transaction[] @relation("sender")
  receivedTransactions Transaction[] @relation("receiver")
  dateCreated          DateTime      @default(now())
  dateUpdated          DateTime      @updatedAt()
}

model Transaction {
  id         String   @id @unique @default(uuid())
  Sender     Account  @relation("sender", fields: [senderId], references: [id])
  senderId   String   @unique
  Receiver   Account  @relation("receiver", fields: [receiverId], references: [id])
  receiverId String   @unique
  amount     Float
  message    String?
  date       DateTime @default(now())
}
